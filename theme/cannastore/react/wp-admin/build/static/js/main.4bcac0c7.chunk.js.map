{"version":3,"sources":["theme/themeDark.js","theme/themeLight.js","theme/jsx/CannastoreLogo.jsx","theme/Icon.jsx","components/Algolia.jsx","components/Bottom.jsx","components/Top.jsx","redux/admin/actions.jsx","components/Import.jsx","redux/app/actions.jsx","components/AppMenu.jsx","components/Fullscreen.jsx","components/Manager.jsx","components/Seed.jsx","components/Saving.jsx","components/Hit.jsx","components/Basic.jsx","App.jsx","redux/app/reducer.jsx","redux/admin/reducer.jsx","redux/index.jsx","serviceWorker.js","index.jsx"],"names":["themeDark","palette","type","background","default","paper","primary","main","secondary","success","error","themeLight","CannastoreLogo","props","color","c","react_default","a","createElement","Fragment","Object","assign","viewBox","stroke","strokeWidth","fill","fillRule","d","Icon","_this$props","this","icon","classes","iconColor","jsx_CannastoreLogo","className","iconButton","AddShoppingCart_default","Wifi_default","WifiOff_default","PersonPin_default","Add_default","Code_default","ChevronLeft_default","ChevronRight_default","CameraAlt_default","Search_default","SkipNextRounded_default","MovieCreation_default","Group_default","Settings_default","ArrowRight_default","ArrowLeft_default","KeyboardArrowUp_default","Pause_default","Link_default","ArrowDropDown_default","Share_default","Fastfood_default","TouchApp_default","ExpandMore_default","Save_default","Brightness4_default","Brightness5_default","Looks_default","Build_default","BeachAccess_default","Spa_default","Close_default","Help_default","Edit_default","Widgets_default","PanTool_default","ArrowDownward_default","ArrowUpward_default","ExitToApp_default","KeyboardVoice_default","PlayArrow_default","DeleteOutlined_default","AddCircle_default","Casino_default","CloudQueue_default","Person_default","MonetizationOn_default","AccountBox_default","Palette_default","Fullscreen_default","FullscreenExit_default","ImportExport_default","ArrowForward_default","Home_default","MoreVert_default","Component","withStyles","theme","width","height","white","withTheme","algoliasearch","process","makeStyles","text","padding","spacing","paddingBottom","list","marginBottom","subheader","backgroundColor","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","display","alignItems","border","boxShadow","input","marginLeft","flex","divider","createAction","importOpen","managerOpen","bus","bussing","bussed","queue","saving","auto","importCard","closeBtn","marginTop","progress","horzPad","paddingLeft","paddingRight","link","cursor","title","form","flexDirection","formControl","minWidth","formControlLabel","btnText","marginRight","appMenuOpen","fullScreen","themeMode","thingo","Menu_Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","root","&:focus","& .MuiListItemIcon-root, & .MuiListItemText-primary","MenuItem","seed","btnTxt","seedCard","tabs","borderRight","concat","tabLabel","textAlign","tabLabelAvatar","seedAvatar","localeDescription","maxWidth","backdrop","drawer","hit","useStyles","basic","Basic","React","useEffect","App","useSelector","state","app","ThemeProvider","createMuiTheme","appSlice","pJSON","appReducer","createReducer","_createReducer","defineProperty","action","adminSlice","languages","en","flag","native","international","nl","fr","es","de","source","name","image","url","adminReducer","reducer_createReducer","reduxStore","reducer","combineReducers","admin","preloadedState","middleware","toConsumableArray","getDefaultMiddleware","serializableCheck","configureStore","devTools","enhancers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","console","log","onSuccess","catch","__webpack_require__","__webpack_exports__","src_getHistory","getStore","version","getHistory","createBrowserHistory","store","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","alert","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4bcac0c7.chunk.js","sourcesContent":["export const themeDark = {\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#10302f',\n      paper: '#10302f',\n    },\n    primary: {\n      main: '#8aff20',\n    },\n    secondary: {\n      main: '#8aff20',\n    },\n    success: {\n      main: '#8aff20',\n    },\n    error: {\n      main: '#ffae20',\n    },\n  }\n}","export const themeLight = { \n  palette: {\n    type: 'light',\n    background: {\n      default: '#fff',\n      paper: '#fff',\n    },\n    primary: {\n      main: '#255150',\n    },\n    secondary: {\n      main: '#255150',\n    },\n    success: {\n      main: '#255150',\n    },\n    error: {\n      main: '#255150',\n    },\n  }\n}","import React from \"react\"\nconst CannastoreLogo = props => {\n\n    const { color } = props\n    let c = `#000000`\n    if (color) {\n        c = color\n    }\n\n    return <React.Fragment>\n            <svg {...props} viewBox=\"0 0 355 329\" >\n                \n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <g fill={c} fillRule=\"nonzero\">\n                        <path d=\"M268.916897,242.660295 C296.598712,232.668853 326.048988,229.045275 355,231.995182 C334.46426,253.265402 309.251782,269.711118 281.308031,279.958587 C270.414691,283.956604 259.165754,287.000122 247.866017,289.003531 C233.978675,291.475789 219.972272,292.413487 206,291.834227 C229.047145,278.389624 250.124218,261.910304 268.916897,242.660295 Z\"></path>\n                        <path d=\"M336,70 C329.98391,114.452229 313.385099,157.115999 287.551021,194.221948 C278.81314,206.771379 269.055972,218.642483 258.540466,229.497292 C240.526198,248.164381 220.236127,264.077609 198,277 C213.41979,244.325834 223.202262,209.110133 226.934642,172.970381 C229.97669,167.970807 233.195077,163.030875 236.506773,158.277026 C262.340851,121.171872 296.524548,90.8873548 336,70 Z\"></path>\n                        <path d=\"M291,327.794651 C274.269997,330.131657 257.123792,329.070404 240.63969,324.610089 C227.94596,321.177285 215.930248,315.793092 205,308.739495 C207.96752,308.868034 210.94459,308.936321 213.920865,308.936321 C225.580061,308.936321 237.248011,307.952191 248.839564,306 C264.179313,310.553507 278.492486,317.975851 291,327.794651 Z\"></path>\n                        <path d=\"M177,0 C199.282338,42.9910206 211,91.0639728 211,139.978463 C211,188.918479 199.282338,237.008979 177,280 C154.717662,237.008979 143,188.919276 143,139.978463 C143,91.0639728 154.717662,42.9902229 177,0 Z\"></path>\n                        <path d=\"M141.072912,308.935535 C144.048608,308.935535 147.024304,308.867267 150,308.738762 C139.063124,315.799306 127.04179,321.182058 114.350526,324.613943 C97.8608739,329.072262 80.7187965,330.134035 64,327.788819 C76.5138358,317.963812 90.8409366,310.544257 106.177705,306 C117.758255,307.950866 129.415186,308.935535 141.072912,308.935535 Z\"></path>\n                        <path d=\"M149,291.833063 C135.026835,292.413196 121.036999,291.483383 107.16544,289.010814 C107.114637,289.002012 107.063834,288.99401 107.005093,288.985208 C95.7641684,286.981548 84.5565832,283.94645 73.6966799,279.964735 C45.7503489,269.715979 20.5362588,253.268998 0,231.995307 C28.935399,229.045029 58.3708885,232.669062 86.0886067,242.661759 C104.889631,261.930989 125.968051,278.403576 149,291.833063 Z\"></path>\n                        <path d=\"M128.058318,172.962029 C131.790484,209.109872 141.572396,244.317757 157,277 C134.773845,264.07756 114.477029,248.16427 96.4463977,229.480409 C85.9401923,218.634307 76.183583,206.763157 67.4462029,194.20493 C41.6136048,157.107586 25.0157455,114.443652 19,70 C58.4731902,90.887435 92.663626,121.172069 118.487526,158.268618 C121.798242,163.022485 125.008537,167.962436 128.058318,172.962029 Z\"></path>\n                    </g>\n                </g>\n            </svg>\n        </React.Fragment>\n}\nexport default CannastoreLogo\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport CannastoreLogo from './jsx/CannastoreLogo'\n\nimport IconDefault from '@material-ui/icons/Help'\nimport IconSkip from '@material-ui/icons/SkipNextRounded'\nimport IconXML from '@material-ui/icons/Code'\nimport IconImport from '@material-ui/icons/ImportExport'\nimport IconFood from '@material-ui/icons/Fastfood'\nimport IconFullscreen from '@material-ui/icons/Fullscreen'\nimport IconFullscreenExit from '@material-ui/icons/FullscreenExit'\nimport IconPhoto from '@material-ui/icons/CameraAlt'\nimport IconFilm from '@material-ui/icons/MovieCreation'\nimport IconInfo from '@material-ui/icons/Help'\nimport IconHome from '@material-ui/icons/Home'\nimport IconPalette from '@material-ui/icons/Palette'\nimport IconMenu from '@material-ui/icons/MoreVert'\nimport IconExpand from '@material-ui/icons/Add'\nimport IconStart from '@material-ui/icons/ArrowForward'\nimport IconGambler from '@material-ui/icons/MonetizationOn'\nimport IconStory from '@material-ui/icons/ArrowRight'\nimport IconFire from '@material-ui/icons/CloudQueue'\nimport IconUser from '@material-ui/icons/Person'\nimport IconGames from '@material-ui/icons/Casino'\nimport IconAdd from '@material-ui/icons/AddCircle'\nimport IconOpen from '@material-ui/icons/Add'\nimport IconDelete from '@material-ui/icons/DeleteOutlined'\nimport IconPlay from '@material-ui/icons/PlayArrow'\nimport IconSave from '@material-ui/icons/Save'\nimport IconBroadcast from '@material-ui/icons/KeyboardVoice'\nimport IconSignout from '@material-ui/icons/ExitToApp'\nimport IconLevelUp from '@material-ui/icons/ArrowUpward'\nimport IconLevelDown from '@material-ui/icons/ArrowDownward'\nimport IconHand from '@material-ui/icons/PanTool'\nimport IconManager from '@material-ui/icons/AccountBox'\nimport IconEdit from '@material-ui/icons/Edit'\nimport IconWork from '@material-ui/icons/Build'\nimport IconLife from '@material-ui/icons/BeachAccess'\nimport IconBalance from '@material-ui/icons/Spa'\nimport IconClose from '@material-ui/icons/Close'\nimport IconFeatured from '@material-ui/icons/Looks'\nimport IconDarkTheme from '@material-ui/icons/Brightness4'\nimport IconLightTheme from '@material-ui/icons/Brightness5'\nimport IconUpdate from '@material-ui/icons/Save'\nimport IconPanelToggle from '@material-ui/icons/ExpandMore'\nimport IconPushtotalk from '@material-ui/icons/TouchApp'\nimport IconShare from '@material-ui/icons/Share'\nimport IconChild from '@material-ui/icons/ArrowDropDown'\nimport IconSeparator from '@material-ui/icons/ArrowRight'\nimport IconLink from '@material-ui/icons/Link'\nimport IconPause from '@material-ui/icons/Pause'\nimport IconSettings from '@material-ui/icons/Settings'\nimport IconParent from '@material-ui/icons/KeyboardArrowUp'\nimport IconNext from '@material-ui/icons/ArrowRight'\nimport IconPrevious from '@material-ui/icons/ArrowLeft'\nimport IconSocial from '@material-ui/icons/Group'\nimport IconLeft from '@material-ui/icons/ChevronLeft'\nimport IconRight from '@material-ui/icons/ChevronRight'\nimport IconAPI from '@material-ui/icons/Code'\nimport IconProduct from '@material-ui/icons/Widgets'\nimport IconCreate from '@material-ui/icons/Add'\nimport IconConnected from '@material-ui/icons/Wifi'\nimport IconNotConnected from '@material-ui/icons/WifiOff'\nimport IconLocale from '@material-ui/icons/PersonPin'\nimport IconSearch from '@material-ui/icons/Search'\nimport IconCart from '@material-ui/icons/AddShoppingCart'\n\nconst styles = theme => ({\n    iconButton: {\n        width: 24,\n        height: 24,\n    },\n    white: {\n        color: 'white',\n    }\n})\n\nclass Icon extends Component {\n\n    render() {\n        const {\n            icon,\n            color,\n            classes,\n        } = this.props\n        let iconColor = `inherit`\n        if (color) {\n            iconColor = color\n        }\n        switch (icon) {\n\n            case `none`:\n                return null\n\n            case 'logo': \n                return <CannastoreLogo className={classes.iconButton} color={iconColor} />\n\n            case `cart`:\n                return (<IconCart color={iconColor} />)   \n\n            case `connected`:\n                return (<IconConnected color={iconColor} />)   \n\n            case `notconnected`:\n                return (<IconNotConnected color={iconColor} />)   \n\n            case `locale`:\n                return (<IconLocale color={iconColor} />)   \n\n            case `create`:\n                return (<IconCreate color={iconColor} />)   \n\n            case `api`:\n                return (<IconAPI color={iconColor} />)             \n\n            case `left`:\n                return (<IconLeft color={iconColor} />)  \n\n            case `right`:\n                return (<IconRight color={iconColor} />)  \n\n            case `photo`:\n                return (<IconPhoto color={iconColor} />)  \n\n            case `search`:\n                return (<IconSearch color={iconColor} />)   \n\n            case `skip`:\n                return (<IconSkip color={iconColor} />)  \n\n            case `film`:\n                return (<IconFilm color={iconColor} />)    \n\n            case `social`:\n                return (<IconSocial color={iconColor} />)\n\n            case `settings`:\n                return (<IconSettings color={iconColor} />) \n\n            case `next`:\n                return (<IconNext color={iconColor} />) \n\n            case `previous`:\n                return (<IconPrevious color={iconColor} />) \n            \n            case `parent`:\n                return (<IconParent color={iconColor} />) \n\n            case `pause`:\n                return (<IconPause color={iconColor} />) \n\n            case `link`:\n                return (<IconLink color={iconColor} />) \n\n            case `separator`:\n                return (<IconSeparator color={iconColor} />) \n\n            case `child`:\n                return (<IconChild color={iconColor} />) \n\n            case `share`:\n                return (<IconShare color={iconColor} />) \n\n            case `open`:\n                return (<IconOpen color={iconColor} />) \n\n            case `food`:\n                return (<IconFood color={iconColor} />) \n\n            case `pushtotalk`:\n                return (<IconPushtotalk color={iconColor} />) \n\n            case `panel-toggle`:\n                return (<IconPanelToggle color={iconColor} />) \n\n            case `update`:\n                return (<IconUpdate color={iconColor} />) \n\n            case `dark`:\n                return (<IconDarkTheme color={iconColor} />) \n\n            case `light`:\n                return (<IconLightTheme color={iconColor} />) \n\n            case `featured`:\n                return (<IconFeatured color={iconColor} />) \n\n            case `work`:\n                return (<IconWork color={iconColor} />) \n\n            case `xml`:\n                return (<IconXML color={iconColor} />)\n           \n            case `life`:\n                return (<IconLife color={iconColor} />) \n\n            case `balance`:\n                return (<IconBalance color={iconColor} />) \n\n            case `close`:\n                return (<IconClose color={iconColor} />)\n\n            case `info`:\n                return (<IconInfo color={iconColor} />)\n\n            case `edit`:\n                return (<IconEdit color={iconColor} />)\n\n            case `product`:\n                return (<IconProduct color={iconColor} />)\n\n            case `stop`:\n                return (<IconHand color={iconColor} />)\n\n            case `leveldown`:\n                return (<IconLevelDown color={iconColor} />)\n\n            case `levelup`:\n                return (<IconLevelUp color={iconColor} />)\n\n            case `signout`:\n                return (<IconSignout color={iconColor} />)\n\n            case `events`:\n                return (<IconBroadcast color={iconColor} />)\n\n            case `broadcast`:\n                return (<IconBroadcast color={iconColor} />)\n\n            case `save`:\n                return (<IconSave color={iconColor} />)\n\n            case `play`:\n                return (<IconPlay color={iconColor} />)\n\n            case `delete`:\n                return (<IconDelete color={iconColor} />)\n\n            case `add`:\n                return (<IconAdd color={iconColor} />)\n\n            case `games`:\n                return (<IconGames color={iconColor} />)\n\n            case `fire`:\n                return (<IconFire color={iconColor} />)\n\n            case `user`:\n                return (<IconUser color={iconColor} />)\n\n            case `story`:\n                return (<IconStory color={iconColor} />)\n\n            case `gamblers`:\n                return (<IconGambler color={iconColor} />)\n                \n            case `gambler`:\n                return (<IconGambler color={iconColor} />)\n\n            case `manager`:\n                return (<IconManager color={iconColor} />)\n\n            case `palette`:\n                return (<IconPalette color={iconColor} />)\n\n            case `fullscreen`:\n                return (<IconFullscreen color={iconColor} />)\n\n            case `exitfullscreen`:\n                return (<IconFullscreenExit color={iconColor} />)\n\n            case `import`:\n                return (<IconImport color={iconColor} />)\n\n            case `start`:\n                return (<IconStart color={iconColor} />)    \n\n            case `expand`:\n                return (<IconExpand color={iconColor} />)\n\n            case `home`:\n                return (<IconHome color={iconColor} />)\n\n            case `menu`:\n                return (<IconMenu color={iconColor} />)\n\n            default: {\n                return (<IconDefault color={iconColor} />)\n            }\n        }\n    }\n}\n\nexport default (\n    withStyles(styles, { withTheme: true })(Icon)\n)\n","import React from 'react'\nimport algoliasearch from 'algoliasearch/lite'\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Pagination,\n} from 'react-instantsearch-dom'\nimport { \n  Hit,\n  Top,\n} from './'\nimport './Algolia.css'\n\nconst searchClient = algoliasearch(\n        process.env.REACT_APP_ALGOLIA_APP_ID, \n        process.env.REACT_APP_ALGOLIA_SEARCH,\n)\n\nexport default function Algolia() {\n\t\n\treturn  <InstantSearch \n            searchClient={searchClient} \n            indexName={`canna`}\n            initialUiState={{\n              indexName: {\n                query: 'blueberry',\n                page: 5,\n              },\n            }}\n            onStateChange={(uiState, setUiState) => {\n              console.log ('onStateChange', uiState, setUiState)\n            }}> \n              <Top>\n                  <SearchBox\n                    className=\"searchbox\"\n                    translations={{\n                      placeholder: '',\n                    }}\n                  />\n              </Top>\n              <Hits hitComponent={ Hit } />\n              <Pagination />\n            </InstantSearch>\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\n  // const classes = useStyles()\n  React.useEffect(() => {\n  }, [])\n\n\nonStateChange({ uiState, setUiState }) {\n                console.log('onStateChange', uiState, setUiState)\n              },\n\n\n\n\n*/","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport Fab from '@material-ui/core/Fab'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Avatar from '@material-ui/core/Avatar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AddIcon from '@material-ui/icons/Add'\nimport SearchIcon from '@material-ui/icons/Search'\nimport MoreIcon from '@material-ui/icons/MoreVert'\n\nconst messages = [\n  {\n    id: 1,\n    primary: 'Brunch this week?',\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    id: 2,\n    primary: 'Birthday Gift',\n    secondary: `Do you have a suggestion for a good present for John on his work\n      anniversary. I am really confused & would love your thoughts on it.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n  {\n    id: 3,\n    primary: 'Recipe to try',\n    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\n    person: '/static/images/avatar/2.jpg',\n  },\n  {\n    id: 4,\n    primary: 'Yes!',\n    secondary: 'I have the tickets to the ReactConf for this year.',\n    person: '/static/images/avatar/3.jpg',\n  },\n  {\n    id: 5,\n    primary: \"Doctor's Appointment\",\n    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\n    person: '/static/images/avatar/4.jpg',\n  },\n  {\n    id: 6,\n    primary: 'Discussion',\n    secondary: `Menus that are generated by the bottom app bar (such as a bottom\n      navigation drawer or overflow menu) open as bottom sheets at a higher elevation\n      than the bar.`,\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    id: 7,\n    primary: 'Summer BBQ',\n    secondary: `Who wants to have a cookout this weekend? I just got some furniture\n      for my backyard and would love to fire up the grill.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n}))\n\nexport default function Bottom() {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Inbox\n        </Typography>\n        <List className={classes.list}>\n          {messages.map(({ id, primary, secondary, person }) => (\n            <React.Fragment key={id}>\n              {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\n              {id === 3 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\" src={person} />\n                </ListItemAvatar>\n                <ListItemText primary={primary} secondary={secondary} />\n              </ListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n            <AddIcon />\n          </Fab>\n          <div className={classes.grow} />\n          <IconButton color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n// import { \n//   toggleFullScreen,\n//   toggleThemeMode,\n// } from '../redux/app/actions'\nimport clsx from 'clsx'\nimport {\n    makeStyles,\n    Paper,\n    // Divider,\n    // IconButton,\n    // Tooltip,\n} from '@material-ui/core/'\n\nimport  { AppMenu } from './'\n// import  { Icon } from '../theme'\n\nconst useStyles = makeStyles((theme) => ({\n  top: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n\n  },\n  paper:{\n    border: 'none',\n    boxShadow: 'none',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}))\n\nexport default function Top( props ) {\n  \n  const classes = useStyles()\n  const appSlice = useSelector(state => state.app)\n  const {\n    // fullScreen,\n    themeMode,\n  } = appSlice\n  console.log ( 'themeMode', themeMode )\n  const { children } = props\n\n  return <Paper square className={ clsx ( classes.top, classes.paper ) }>\n          \n            \n\n            { children }\n            \n           <AppMenu />\n \n            \n          </Paper>\n}\n\n/*\n<IconButton \n              className={classes.iconButton} \n              aria-label=\"search\">\n              <Icon icon={ `search` } color={ `inherit` } />\n            </IconButton>\n <InputBase\n              autoFocus\n              // type={ `hidden` }\n              className={classes.input}\n              placeholder=\"Search Sensi\"\n              inputProps={{ 'aria-label': 'Search Sensi' }}\n            />\n\n*/","import { createAction } from '@reduxjs/toolkit'\nimport { getStore } from '../../'\nimport axios from 'axios'\nimport parser from 'fast-xml-parser'\n\n\nexport const error = createAction(`ADMIN/ERROR`)\nexport const importOpen = createAction(`ADMIN/IMPORTOPEN`)\nexport const managerOpen = createAction(`ADMIN/MANAGEROPEN`)\nexport const bus = createAction(`ADMIN/BUS`)\nexport const bussing = createAction(`ADMIN/BUSSING`)\nexport const bussed = createAction(`ADMIN/BUSSED`)\nexport const queue = createAction(`ADMIN/QUEUE`)\nexport const saving = createAction(`ADMIN/SAVING`)\nexport const auto = createAction(`ADMIN/AUTO`)\n\nexport const save = seed => {\n\tconst store = getStore()\n\tconst endpoint = `${process.env.REACT_APP_LISTINGSLAB_API}/canna`\n\t//console.log ( 'save', endpoint, seed )\n\tconst requestBody = { \n\t\taction: `save`,\n\t\tseed \n\t}\n\tstore.dispatch({type: `ADMIN/SAVING`, saving: true })\n\taxios.post(endpoint, requestBody)\n\t\t.then(function(response) {\n\t\t\tconst {\n\t\t\t\tstatus,\n\t\t\t\tmessage,\n\t\t\t} = response.data.response.data\n\t\t\tif (status === 200){\n\t\t\t\tconsole.log ( status, message )\n\t\t\t\tskip()\n\t\t\t}\n\t\t\tstore.dispatch({type: `ADMIN/SAVING`, saving: false })\n\t\t\treturn true\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tstore.dispatch({type: `ADMIN/ERROR`, error })\n\t\t\tstore.dispatch({type: `ADMIN/SAVING`, saving: false })\n\t\t\treturn false\n\t\t})\n\n\treturn true\n}\n\nexport const skip = () => {\n\tconst store = getStore()\n\tlet newQ = store.getState().admin.queue\n\tnewQ = newQ.slice( 1, newQ.length )\n\tstore.dispatch({ type: `ADMIN/QUEUE`, queue: newQ })\n\treturn true\n}\n\nexport const getById = id => {\n\tconst store = getStore()\n\tconst bus = store.getState().admin.bus\n\tif (!bus) return false\n\tlet seed = { en: null, nl: null, fr: null, es: null, de: null }\n\tif (!bus.en.data || !bus.nl.data || !bus.fr.data || !bus.es.data || !bus.de.data ) return false\n\tconst englishList = bus.en.data.item\n\tfor (let i = 0; i< englishList.length; i++){\n\t\tif (englishList[i].id === parseFloat(id)){\n\t\t\tseed.en = englishList[i]\n\t\t}\n\t}\n\tconst dutchList = bus.nl.data.item\n\tfor (let i = 0; i< dutchList.length; i++){\n\t\tif (dutchList[i].id === parseFloat(id)){\n\t\t\tseed.nl = dutchList[i]\n\t\t}\n\t}\n\tconst frenchList = bus.fr.data.item\n\tfor (let i = 0; i< frenchList.length; i++){\n\t\tif (frenchList[i].id === parseFloat(id)){\n\t\t\tseed.fr = frenchList[i]\n\t\t}\n\t}\n\tconst spanishList = bus.es.data.item\n\tfor (let i = 0; i< spanishList.length; i++){\n\t\tif (spanishList[i].id === parseFloat(id)){\n\t\t\tseed.es = spanishList[i]\n\t\t}\n\t}\n\tconst germanList = bus.de.data.item\n\tfor (let i = 0; i< germanList.length; i++){\n\t\tif (germanList[i].id === parseFloat(id)){\n\t\t\tseed.de = germanList[i]\n\t\t}\n\t}\n\treturn seed\n}\n\nexport const initBus = () => {\n\tconst store = getStore()\n\tstore.dispatch( { type: `ADMIN/BUSSING`, bussing: true } )\n\tconst {\n\t\tsource,\n\t\tlanguages,\n\t} = store.getState().admin\n\tconst bus = {}\n\tfor(let key in languages) {\n\t    const value = languages[key]\n\t    if (value){\n\t    \tbus[key] = {\n\t    \t\tendpoint: `${source.url}${key}.xml`,\n\t    \t\tdata: null,\n\t    \t\tcomplete: false,\n\t    \t}\n\t    }\n\t}\n\tstore.dispatch({type: `ADMIN/BUS`, bus })\n\tfor(let key in bus) {\n\t\tconst source = bus[key]\n\t\taxios.get(source.endpoint)\n\t\t\t.then(function(response) {\n\t\t\t\t// console.log ('response', response)\n\t\t\t\tconst queue = parser.parse(response.data).rss.channel.item\n\t\t\t\tlet formattedQ = []\n\t\t\t\tif ( key === `en` ){\n\t\t\t\t\tfor ( let i = 0; i < queue.length; i ++ ){\n\t\t\t\t\t\tformattedQ.push({\n\t\t\t\t\t\t\tid: queue[i].id,\n\t\t\t\t\t\t\turl: queue[i].url,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tstore.dispatch({ type: `ADMIN/QUEUE`, queue: formattedQ })\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst oldBus = getStore().getState().admin.bus\n\t\t\t\tconst newBus = {\n\t\t\t\t\t...oldBus,\n\t\t\t\t\t[key]: {\n\t\t\t\t\t\t...oldBus[key],\n\t\t\t\t\t\tdata: parser.parse(response.data).rss.channel,\n\t\t\t    \t\tcomplete: true,\n\t\t\t    \t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstore.dispatch({type: `ADMIN/BUS`, bus: newBus })\n\t\t\t\tstore.dispatch({type: `ADMIN/BUSSING`, bussing: false })\n\t\t\t\tstore.dispatch({type: `ADMIN/BUSSED`, bussed: true })\n\t\t\t\treturn true\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tstore.dispatch({type: `ADMIN/ERROR`, error })\n\t\t\t\tstore.dispatch({type: `ADMIN/BUSSING`, bussing: false })\n\t\t\t\tstore.dispatch({type: `ADMIN/BUSSED`, bussed: true })\n\t\t\t\treturn false\n\t\t\t})\n\t\t}\n}\n\nexport const toggleManager = bool => {\n\tconst store = getStore()\n\tstore.dispatch({type: `ADMIN/MANAGEROPEN`, managerOpen: bool })\n\treturn true\n}\n\nexport const toggleImport = bool => {\n\tconst store = getStore()\n\tstore.dispatch({type: `ADMIN/IMPORTOPEN`, importOpen: bool })\n\treturn true\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { useSelector } from 'react-redux'\nimport { \n\ttoggleImport,\n\tinitBus,\n} from '../redux/admin/actions'\nimport {\n    makeStyles,\n    Avatar,\n    CardHeader,\n    CardContent,\n    Dialog,\n    DialogContent,\n    Typography,\n    IconButton,\n    Grid,\n    Link,\n    LinearProgress,\n} from '@material-ui/core/'\nimport { Seed } from './' \nimport  { Icon } from '../theme'\n\nconst useStyles = makeStyles((theme) => ({\n\timportCard: {\n\t\tbackground: 'rgba(255, 255, 255, 0.1)',\n\t},\n\tcloseBtn:{\n\t\tmarginTop: -theme.spacing(2),\n\t},\n\tprogress: {\n\t\theight: 5,\n\t\tmarginBottom: theme.spacing(),\n\t},\n\thorzPad:{\n\t\tpaddingLeft: theme.spacing(3),\n\t\tpaddingRight: theme.spacing(3),\n\t},\n\tgrow:{\n\t\tflexGrow: 1,\n\t},\n\tlink:{\n\t\tcursor: 'pointer',\n\t\t\n\t},\n\ttitle:{\n\t\tdisplay: 'flex',\n\t},\n\tform: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmargin: 'auto',\n\t\twidth: 'fit-content',\n\t},\n\tformControl: {\n\t\tmarginTop: theme.spacing(2),\n\t\tminWidth: 120,\n\t},\n\tformControlLabel: {\n\t\tmarginTop: theme.spacing(),\n\t},\n\tbtnText: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tmarginRight: theme.spacing(2),\n\t}\n}))\n\n    const closeAdmin = (e) => {\n    \t// console.log ('closeAdmin')\n    \te.preventDefault()\n\t\ttoggleImport( false )\n    }\n\nexport default function Import() {\n\n\tconst classes = useStyles()\n\tconst adminSlice = useSelector(state => state.admin)\n   \tconst { \n\t\timportOpen,\n\t\tbus,\n    \tsource,\n    \tlanguages,\n    \tqueue,\n\t} = adminSlice\n\n\tlet loadingLangs = []\n\tlet allComplete = true\n\tfor( let key in languages ) {\n\t    const value = languages[key]\n\t    let isComplete = true\n\t    if (bus){\n\t    \tif ( !bus[key].complete) {\n\t    \t\tisComplete = false\n\t    \t\tallComplete = false\n\t    \t}\n\t    }\n\t    loadingLangs.push(\t<div key={ `language_${key}` }>\n\t    \t\t\t\t\t\t<Typography variant={ `body1` }>\n\t    \t\t\t\t\t\t\t{ isComplete ? null : ` Loading... ` }\n\t\t\t\t\t\t\t\t\t{ value.native } {` `}\n\t\t\t\t\t\t\t\t\t<Link\n\t\t    \t\t\t\t\t\t\tclassName={ clsx( classes.link ) }\n\t\t    \t\t\t\t\t\t\tonClick={ (e)=> {\n\t\t    \t\t\t\t\t\t\t\te.preventDefault()\n\t\t    \t\t\t\t\t\t\t\tconst url = `${ source.url }${ key }.xml`\n\t\t    \t\t\t\t\t\t\t\twindow.open(url, `_blank`)\n\t\t    \t\t\t\t\t\t\t}}>\n\t\t    \t\t\t\t\t\t\t{ source.url }{ key }.xml\n\t\t    \t\t\t\t\t\t</Link>\n\t\t    \t\t\t\t\t\t{ !isComplete ? null : ` loaded.` }\n\t\t\t\t\t\t\t\t</Typography>\t\t\t\t\t    \t\t\n\t\t\t\t\t    \t</div>\n\t\t\t\t\t    )\n\t}\n\tif (allComplete) loadingLangs = []\n\n\tlet id = null\n\tif (queue[0]){\n\t\tid = queue[0].id\n\t}\n\n\tconst output =\t<div className={ clsx( classes.importCard )}>\n\t\t\t\t\t\t<CardHeader \n\t\t\t\t\t\t\tdisableTypography\n\t\t\t\t\t\t\taction={<IconButton\n\t\t\t\t\t\t                color={ `primary` }\n\t\t\t\t\t\t                onClick={ closeAdmin }>\n\t\t\t\t\t\t                <Icon icon={ `close` } color={ `primary` } />\n\t\t\t\t\t\t            </IconButton>}\n\t\t\t\t\t\t\tavatar={ <IconButton\n                                          color={ `primary` }\n                                          onClick={ (e) => {\n                                            e.preventDefault()\n                                            const url = `https://sensiseeds.com/en/`\n                                            window.open( url, `_blank`)\n                                          }}>\n                                        <Avatar src={ source.image }/>\n                                      </IconButton> }\n\t\t\t\t\t\t\ttitle={ <Typography variant={ `h6` }>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t    \t\t\t\t\t\t\tclassName={ clsx( classes.link ) }\n\t\t\t    \t\t\t\t\t\t\tonClick={ (e)=> {\n\t\t\t    \t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t    \t\t\t\t\t\t\t\tconst url = `https://sensiseeds.com/en/`\n\t\t\t    \t\t\t\t\t\t\t\twindow.open(url, `_blank`)\n\t\t\t    \t\t\t\t\t\t\t}}>\n\t\t\t\t    \t\t\t\t\t\t\t{ source.title }\n\t\t\t\t    \t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Typography> }\n\t\t\t\t\t\t\tsubheader={ <React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{ queue.length ? <Typography variant={ `body1` }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ queue.length } in queue\n\t\t\t\t\t\t\t\t\t\t\t</Typography> : null }\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>}\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t{ queue.length ? <React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t<Seed seedId={ id } />\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment> : null }\n\t\t\t\t\t\t\t{ loadingLangs }\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</div>\n\n    React.useEffect(() => {\n    \tconst {\n    \t\tbussing,\n    \t\tbussed,\n    \t} = adminSlice\n    \tif ( !bussing && !bussed && importOpen ) initBus()\n\t}, [adminSlice])\n\n\n\n\treturn\t<Dialog \n\t\t\t\tfullScreen\n\t\t\t\t// fullWidth\n    \t\t\t// maxWidth={ `md` }\n\t\t\t\topen={ importOpen }\n        \t\tonClose={ closeAdmin }>\n        \t\t<div className={ clsx( classes.progress ) }>\n\t\t\t\t\t{ allComplete ? null : <LinearProgress /> }\n\t\t\t\t</div>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<Grid container className={ clsx( classes.title )}>\n\t\t\t\t\t\t<Grid item xs={ 12 }>\n\t\t\t\t\t\t\t{ output }\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n}\n\n/*\n\n{ getById (queue[0].id ) }\n\n<Grid item xs={ 6 } className={ clsx( classes.horzPad )}>\n\t<Typography variant={ `body1` } gutterBottom>\n        The ability to keep the search results up to date is \n        clearly vital, and is done here in the admin section. Of course \n        this is a prototype. In a production app the admin section \n        won't be publically available like this \n        Here we will use Sensi Seeds\n    </Typography>\n</Grid>\n\n*/","import { createAction } from '@reduxjs/toolkit'\nimport { getStore, getHistory } from '../../'\n\nexport const error = createAction(`APP/ERROR`)\nexport const appMenuOpen = createAction(`APP/APPMENUOPEN`)\nexport const fullScreen = createAction(`APP/FULLSCREEN`)\nexport const themeMode = createAction(`APP/THEMEMODE`)\n\nexport const toggleThemeMode = mode => {\n\n\tconst store = getStore()\n\tlet newMode = `dark`\n\tif (mode === `dark`) newMode = `light`\n\tstore.dispatch({type: `APP/THEMEMODE`, themeMode: newMode })\n\treturn true\n}\n\nexport const toggleFullScreen = bool => {\n\tconst store = getStore()\n\tstore.dispatch({type: `APP/FULLSCREEN`, fullScreen: bool })\n\treturn true\n}\n\nexport const toggleAppMenu = bool => {\n\tconst store = getStore()\n\tstore.dispatch({type: `APP/APPMENUOPEN`, appMenuOpen: bool })\n\treturn true\n}\n\nexport const changePath = path => {\n\tconst store = getStore()\n\tconst history = getHistory()\n\tstore.dispatch({type: `APP/PATH`, path })\n\thistory.push(path)\n\twindow.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    })\n    return true\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { \n  toggleAppMenu,\n  toggleFullScreen,\n  toggleThemeMode,\n} from '../redux/app/actions'\nimport { \n  toggleImport,\n} from '../redux/admin/actions'\nimport {\n    makeStyles,\n    withStyles,\n    useTheme,\n    Menu,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    // Tooltip,\n} from '@material-ui/core/'\nimport  { Icon } from '../theme'\n\nconst useStyles = makeStyles((theme) => ({\n  thingo: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid rgba(255, 255, 255, 0.2)',\n    // border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      // backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        // color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem)\n\nexport default function AppMenu() {\n\n  const classes = useStyles()\n  const theme = useTheme()\n  const primary = theme.palette.primary.main\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const appSlice = useSelector(state => state.app)\n  const {\n    themeMode,\n  } = appSlice\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n    toggleAppMenu( true )\n  }\n\n  const handleClose = () => {\n    setAnchorEl( null )\n    toggleAppMenu( false )\n  }\n\n  return <div>\n          \n            <IconButton \n              style={{ marginLeft: 8, marginRight: 8 }}\n              edge={ `end` }\n              aria-haspopup={ true }\n              color={ `secondary` }\n              onClick={ handleClick }>\n              <Icon icon={ `logo` } color={ primary } />\n            </IconButton>\n          \n\n          <StyledMenu\n            id={ `appMenu` }\n            anchorEl={ anchorEl }\n            keepMounted\n            open={Boolean( anchorEl )}\n            onClose={ handleClose }\n          >\n\n            <StyledMenuItem\n              onClick={(e) => {\n                e.preventDefault()\n                toggleImport( true )\n                handleClose()\n              }}>\n              <ListItemIcon>\n                <Icon icon={ `import` } color={ `secondary` } />\n              </ListItemIcon>\n              <ListItemText \n                className={ classes.thingo} \n                primary={ `Import` }\n              />\n            </StyledMenuItem>\n\n           <StyledMenuItem\n              onClick={(e) => {\n                e.preventDefault()\n                toggleFullScreen( true )\n                handleClose()\n              }}>\n              <ListItemIcon>\n                <Icon icon={ `fullscreen` } color={ `secondary` } />\n              </ListItemIcon>\n              <ListItemText \n                className={ classes.thingo} \n                primary={ `Full Screen` }\n              />\n            </StyledMenuItem> \n\n\n\n             <StyledMenuItem\n              onClick={(e) => {\n                e.preventDefault()\n                toggleThemeMode( !themeMode )\n                handleClose()\n              }}>\n              <ListItemIcon>\n                <Icon icon={ themeMode === `dark` ? `light` : `dark` } color={ `inherit` } />\n              </ListItemIcon>\n              <ListItemText \n                className={ classes.thingo} \n                primary={ !themeMode ? `Dark Mode` : `Light mode` }\n              />\n            </StyledMenuItem> \n\n          </StyledMenu>\n        </div>\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { toggleFullScreen } from '../redux/app/actions'\nimport {\n    makeStyles,\n    Dialog,\n} from '@material-ui/core/'\nimport { \n\tTop,\n} from './'\n\nconst useStyles = makeStyles(theme => ({\n\tfullScreen: {\n\t\t// border: '1px solid rgba(1, 1, 1, 0.05)',\n\t},\n}))\n\nexport default function Fullscreen() {\n\t\n\tconst classes = useStyles()\n\t// const appSlice = useSelector(state => state.app)\n\n    React.useEffect(() => {\n\t}, [])\n\n    const closeFullscreen = (e) => {\n    \te.preventDefault()\n\t\ttoggleFullScreen( false )\n    }\n\n\treturn\t<Dialog \n\t\t\t\tfullScreen\n\t\t\t\topen\n\t\t\t\tonClose={ closeFullscreen }\n        \t\tmaxWidth={ `md` }\n\t\t\t>\n\t\t\t\t<div className={ clsx( classes.fullScreen )}>\n\t\t\t\t\t<Top />\n\t\t\t\t</div>\n\t\t\t</Dialog>\n}\n\n\n/*\n// background: theme.palette.primary.main,\n*/","import React from 'react'\nimport clsx from 'clsx'\nimport { useSelector } from 'react-redux'\nimport { \n\ttoggleManager,\n} from '../redux/admin/actions'\nimport {\n    makeStyles,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Typography,\n    IconButton,\n    Grid,\n} from '@material-ui/core/'\nimport  { Icon } from '../theme'\n\nconst useStyles = makeStyles((theme) => ({\n\timportCard: {\n\t\tbackground: 'rgba(255, 255, 255, 0.1)',\n\t},\n\thorzPad:{\n\t\tpaddingLeft: theme.spacing(3),\n\t\tpaddingRight: theme.spacing(3),\n\t},\n\tgrow:{\n\t\tflexGrow: 1,\n\t},\n\tlink:{\n\t\tmargin: theme.spacing(),\n\t},\n\ttitle:{\n\t\tdisplay: 'flex',\n\t},\n\tform: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmargin: 'auto',\n\t\twidth: 'fit-content',\n\t},\n\tformControl: {\n\t\tmarginTop: theme.spacing(2),\n\t\tminWidth: 120,\n\t},\n\tformControlLabel: {\n\t\tmarginTop: theme.spacing(),\n\t},\n\tbtnText: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tmarginRight: theme.spacing(2),\n\t}\n}))\n\nexport default function Manager() {\n\n\tconst classes = useStyles()\n\tconst adminSlice = useSelector(state => state.admin)\n   \tconst { \n\t\tmanagerOpen,\n\t} = adminSlice\n\n\t\n\n    React.useEffect(() => {\n\t}, [adminSlice])\n\n    const close = (e) => {\n    \te.preventDefault()\n\t\ttoggleManager( false )\n    }\n\n\treturn\t<Dialog \n\t\t\t\tfullScreen\n\t\t\t\topen={ managerOpen }\n\t\t\t\t// fullWidth\n    \t\t\t// maxWidth={ `md` }\n        \t\tonClose={ close }>\n\t\t\t\t<DialogTitle \n\t\t\t\t\tid={ `admin-dialog-title` }\n\t\t\t\t\tonClose={ close }>\n\t\t\t\t\t<Grid \n\t\t\t\t\t\tcontainer \n\t\t\t\t\t\tclassName={ clsx( classes.title )}>\n\t\t\t\t\t\t<Grid item className={ clsx( classes.grow )}>\n\t\t\t\t\t\t\t<Typography variant={ `h6` }>\n\t\t\t\t\t\t\t\tManage Seeds\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<IconButton \n\t\t\t\t                color={ `primary` }\n\t\t\t\t                onClick={ close }>\n\t\t\t\t                <Icon icon={ `close` } color={ `primary` } />\n\t\t\t\t            </IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t        </DialogTitle>\n\n\t\t\t\t<DialogContent>\n\n\t\t\t\t\t<Grid container className={ clsx( classes.title )}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Grid item xs={ 8 }>\n\t\t\t\t\t\t\tfsafeaf\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={ 4 } className={ clsx( classes.horzPad )}>\n\t\t\t\t\t\t\t<Typography variant={ `body1` } gutterBottom>\n\t\t\t\t\t            Thaszfasf\n\t\t\t\t\t        </Typography>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t</DialogContent>\n\n\t\t\t</Dialog>\n}\n\n\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport clsx from 'clsx'\nimport {\n    makeStyles,\n    Avatar,\n    Button,\n    CardHeader,\n    CardContent,\n    CardActions,\n    Tabs,\n    Tab,\n    Typography,\n    IconButton,\n    Grid,\n} from '@material-ui/core/'\nimport { \n  getById,\n  skip,\n  save,\n} from '../redux/admin/actions'\nimport { Icon } from '../theme'\n\nconst useStyles = makeStyles((theme) => ({\n  seed: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n  },\n  btnTxt:{\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  seedCard:{\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  tabLabel: {\n    width: '100%',\n    textAlign: 'left',\n    // border: `1px solid ${theme.palette.divider}`,\n  },\n  tabLabelAvatar: {\n    width: 24,\n    height: 24,\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n  },\n  seedAvatar: {\n    width: 75,\n    height: 75,\n  },\n  localeDescription:{\n    maxWidth: 360,\n  },\n  grow: {\n    flexGrow: 1\n  },\n}))\n\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  }\n}\n\nfunction TabPanel(props) {\n  const classes = useStyles()\n\n  const adminSlice = useSelector(state => state.admin)\n  const {\n    queue,\n  } = adminSlice\n  let id = 0\n  if (queue[0].id){\n    id = queue[0].id\n  }\n  let seed = getById(id)\n  if (!seed.en) return null\n  const { children, value, index, ...other } = props\n  let locale = ``\n  switch ( value ) {\n      case 0:\n        locale = `en`\n        break\n      case 1:\n        locale = `nl`\n        break\n      case 2:\n        locale = `fr`\n        break\n      case 3:\n        locale = `es`\n        break\n      case 4:\n        locale = `de`\n        break\n      default: {\n          locale = `en`\n      }\n  }\n\n  seed = {\n    title: seed.en.title,\n    url: seed.en.url,\n    image: seed.en.image,\n    breeder: `sensiseeds`,\n    sku: seed.en.id,\n    strainType: seed.en.strain_type,\n    price: seed.en.price,\n    numberSeeds: seed.en.number_of_seeds,\n    currency: seed.en.currency,\n    locale:{\n      ...seed,\n    }\n  }\n\n  const localeData = seed.locale[locale]\n  const localeDescription = `${localeData.description.substring(0, 250)}...`\n\n  return <div\n      role=\"tabpanel\"\n      hidden={ value !== index }\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div className={ clsx (classes.seedCard) }>\n                              \n                              <CardHeader \n                                disableTypography\n                                avatar={ <IconButton\n                                          color={ `primary` }\n                                          onClick={ (e) => {\n                                            e.preventDefault()\n                                            window.open( localeData.url, `_blank`)\n                                          }}>\n                                          <Avatar \n                                            className={ clsx( classes.seedAvatar ) }\n                                            src={ localeData.image } />\n                                          </IconButton> }\n                                title={ <Typography variant={ `h6` } >\n                                          { localeData.title }\n                                        </Typography>}\n                                subheader={ <Typography variant={ `body2` } >\n                                          { localeData.meta_title }\n                                        </Typography>}\n                                \n                              />\n                              <CardContent>\n\n                                <Typography variant={ `body1` } gutterBottom>\n                                  { localeData.category }&nbsp;\n                                  { localeData.strain_type }&nbsp;\n                                  { localeData.climate_zone }&nbsp;\n                                  { localeData.yield }&nbsp;\n                                  { localeData.heigh_gain }\n                                </Typography>\n\n                                <Typography \n                                  gutterBottom\n                                  variant={ `body2` } \n                                  className={ clsx( classes.localeDescription ) }>\n                                  { localeDescription }\n                                </Typography>\n\n                                <Typography variant={ `button` } gutterBottom>\n                                  { localeData.currency.toUpperCase() }&nbsp;\n                                  { localeData.price } / { localeData.number_of_seeds } Seeds\n                                </Typography>\n                              \n                                \n\n                              </CardContent>\n\n                              <CardActions>\n                                \n                                \n\n                                <Button\n                                  variant={ `contained` }\n                                  color={ `primary` }\n                                   onClick={ (e) => {\n                                      e.preventDefault()\n                                      save ( seed )\n                                    }}>\n                                    <Icon icon={ `save` } color={ `inherit` } />\n                                   <span className={ clsx (classes.btnTxt) }>\n                                     Save\n                                   </span>\n                                   \n                                </Button>\n\n                                <Button\n                                  variant={ `text` }\n                                  color={ `primary` }\n                                  onClick={ (e) => {\n                                    e.preventDefault()\n                                    skip (id)\n                                  }}>\n                                   \n                                   <span className={ clsx (classes.btnTxt) }>\n                                     Skip\n                                   </span>\n                                   <Icon icon={ `skip` } color={ `inherit` } />\n                                </Button>\n\n\n\n                              </CardActions>\n\n                            </div>}\n    </div>\n}\n\nexport default function Seed(props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n  const adminSlice = useSelector(state => state.admin)\n  React.useEffect(() => {\n    //console.log ('do as I say')\n      // const {\n      //   auto,\n      // } = adminSlice\n      // if (auto) \n      // console.log ('auto', auto)\n  }, [ adminSlice ])\n  \n  // const { seedId } = props\n  \n  const {\n    queue,\n  } = adminSlice\n  let id = 0 \n  if (queue[0].en){\n    id = queue[0].en.id\n  }\n  const seed = getById(id)\n  if ( !seed ) return null\n\n  \n\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n \n  return <div className={ clsx (classes.seed) }>\n\n        \n\n      <Tabs\n        orientation={ `vertical` }\n        variant={ `scrollable` }\n        value={ value }\n        onChange={ handleChange }\n        aria-label=\"Seed Locales\"\n        className={classes.tabs}>\n        \n        <Tab label={\n          <div className={ clsx( classes.tabLabel ) }>\n            <Grid container>\n              <Grid item>\n                <Avatar \n                  src={ `/svg/flags/gb.svg` }\n                  className={ clsx( classes.tabLabelAvatar ) }\n                />\n              </Grid>\n              <Grid item>{`English`}</Grid>\n            </Grid>\n          </div>\n        } {...a11yProps(0)} />\n\n        <Tab label={\n          <div className={ clsx( classes.tabLabel ) }>\n            <Grid container>\n              <Grid item>\n                <Avatar \n                  src={ `/svg/flags/nl.svg` }\n                  className={ clsx( classes.tabLabelAvatar ) }\n                />\n              </Grid>\n              <Grid item>{`Nederlands`}</Grid>\n            </Grid>\n          </div>\n        }{...a11yProps(1)} />\n        <Tab label={\n          <div className={ clsx( classes.tabLabel ) }>\n            <Grid container>\n              <Grid item>\n                <Avatar \n                  src={ `/svg/flags/fr.svg` }\n                  className={ clsx( classes.tabLabelAvatar ) }\n                />\n              </Grid>\n              <Grid item>{`Français`}</Grid>\n            </Grid>\n          </div>\n        }{...a11yProps(2)} />\n        <Tab label={\n          <div className={ clsx( classes.tabLabel ) }>\n            <Grid container>\n              <Grid item>\n                <Avatar \n                  src={ `/svg/flags/es.svg` }\n                  className={ clsx( classes.tabLabelAvatar ) }\n                />\n              </Grid>\n              <Grid item>{`Espagnol`}</Grid>\n            </Grid>\n          </div>\n        }{...a11yProps(3)} />\n        <Tab label={\n          <div className={ clsx( classes.tabLabel ) }>\n            <Grid container>\n              <Grid item>\n                <Avatar \n                  src={ `/svg/flags/de.svg` }\n                  className={ clsx( classes.tabLabelAvatar ) }\n                />\n              </Grid>\n              <Grid item>{`Deutsch`}</Grid>\n            </Grid>\n          </div>\n        }{...a11yProps(4)} />\n      </Tabs>\n\n      <TabPanel value={ value } index={ 0 } seed={ seed } />\n      <TabPanel value={ value } index={ 1 } seed={ seed } />\n      <TabPanel value={ value } index={ 2 } seed={ seed } />\n      <TabPanel value={ value } index={ 3 } seed={ seed } />\n      <TabPanel value={ value } index={ 4 } seed={ seed } />\n        \n    </div>\n}\n\n/*\n<pre>\n          { JSON.stringify( error, null, 2 ) }\n        </pre>\n*/","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n    makeStyles,\n    CircularProgress,\n    Backdrop,\n} from '@material-ui/core/'\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 123,\n    color: '#fff',\n  },\n}))\n\nexport default function Saving() {\n  const classes = useStyles()\n\n  const adminSlice = useSelector(state => state.admin)\n  const {\n    saving,\n  } = adminSlice\n\n  return <Backdrop className={ classes.backdrop } open={ saving } >\n\t        <CircularProgress color={`inherit`} />\n\t      </Backdrop>\n\t}\n","import React from 'react'\nimport clsx from 'clsx'\nimport {\n    makeStyles,\n    Avatar,\n    Card,\n    CardHeader,\n    Typography,\n} from '@material-ui/core/'\nimport {\n  Highlight,\n} from 'react-instantsearch-dom'\n\nconst useStyles = makeStyles(theme => ({\n\thit: {\n\t},\n}))\n\nexport default function Hit(props) {\n\t\n\tconst classes = useStyles()\n\tconst { hit } = props\n\tconst {\n\t\t// title,\n\t\timage,\n\t\tbreeder,\n\t} = hit\n\t// console.log ('title', title)\n    React.useEffect(() => {\n\t}, [])\n\n\treturn\t<Card className={ clsx ( classes.hit ) }>\n\t\t\t\t<CardHeader \n\t\t\t\t\tdisableTypography\n\t\t\t\t\ttitle={ <Typography variant={ `body1` }><Highlight \n\t\t\t\t\t\t\t\tattribute={ `title` } \n\t\t\t\t\t\t\t\thit={ props.hit }\n\t\t\t\t\t\t\t\tnonHighlightedTagName={`span`}\n\t\t\t\t\t\t\t\ttagName={`mark`}\n\t\t\t\t\t\t\t/></Typography> }\n\t\t\t\t\tsubheader={ <Typography variant={ `body2` }>\n\t\t\t\t\t\t\t\t\t{ breeder }\n\t\t\t\t\t\t\t\t</Typography> }\n\t\t\t\t\tavatar={ <Avatar src={ image } /> }\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</Card>\n}\n\n/*\n<pre>\n\t\t\t\t\t{ JSON.stringify( hit.image, null, 2) }\n\t\t\t\t</pre>\n*/","import React from 'react'\n// import { useSelector } from 'react-redux'\nimport {\n    makeStyles,\n} from '@material-ui/core/'\n\nconst useStyles = makeStyles(theme => ({\n\tbasic: {\n\t\tborder: '1px solid red',\n\t\t// background: 'rgba(1, 1, 1, 0.05)',\n\t\t// width: 160,\n\t\t// height: 600,\n\t},\n}))\n\nexport default function Basic() {\n\t\n\tconst classes = useStyles()\n\t// const appSlice = useSelector(state => state.app)\n\n    React.useEffect(() => {\n\t}, [])\n\n\treturn\t<div className={classes.basic}>\n\t\t\t\tWP-Admin\n\t\t\t</div>\n}\n\n\n/*\n// background: theme.palette.primary.main,\n*/","import React from 'react'\n// import clsx from 'clsx'\nimport { useSelector } from 'react-redux'\nimport { \n  themeDark, \n  themeLight, \n} from './theme'\nimport {\n  // makeStyles,\n  MuiThemeProvider, \n  createMuiTheme,\n} from '@material-ui/core/'\nimport {\n  Basic,\n} from './components'\n\n// const useStyles = makeStyles((theme) => ({\n//   app: {\n//     width: '100%',\n//     maxHeight: 500,\n//     overflow: 'auto',\n//   },\n//   appWrap: {\n//     // border: '1px solid rgba(255, 255, 255, 0.3)',\n//     // background: 'rgba(255, 255, 255, 0.1)',\n//   },\n// }))\n\nexport default function App() {\n  \n    // const classes = useStyles()\n    const appSlice = useSelector(state => state.app)\n    const {\n      // fullScreen,\n      themeMode,\n    } = appSlice\n    let theme = themeDark\n    if ( themeMode === `light` ) theme = themeLight\n\n    return <MuiThemeProvider theme={createMuiTheme(theme)}>\n              <Basic />\n            </MuiThemeProvider> \n}","import pJSON from '../../../package.json'\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  error,\n  appMenuOpen,\n  fullScreen,\n  themeMode,\n} from \"./actions\"\n\nexport const appSlice = {\n  pJSON,\n  error: null,\n  fullScreen: false,\n  appMenuOpen: false,\n  themeMode: `dark`,\n}\n\nconst appReducer = createReducer(appSlice, {\n\n  [themeMode]: (state, action) => {\n    state.themeMode = action.themeMode\n    return state\n  },\n\n  [fullScreen]: (state, action) => {\n    state.fullScreen = action.fullScreen\n    return state\n  },\n\n  [appMenuOpen]: (state, action) => {\n    state.appMenuOpen = action.appMenuOpen\n    return state\n  },\n\n  [error]: (state, action) => {\n    state.error = action.error\n    return state\n  },\n\n})\n\nexport { appReducer }","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  error,\n  importOpen,\n  managerOpen,\n  bus,\n  bussing,\n  bussed,\n  queue,\n  saving,\n  auto,\n} from \"./actions\"\n\nexport const adminSlice = {\n  error: null,\n  auto: false,\n  importOpen: false,\n  managerOpen: false,\n  bus: null,\n  bussing: false,\n  bussed: false,\n  queue: [],\n  saving: false,\n  languages: { \n    en: {\n      flag: `/svg/flags/gb.svg`,\n      native: `English`,\n      international: `English`,\n    }, \n    nl: {\n      flag: `/svg/flags/nl.svg`,\n      native: `Nederlands`,\n      international: `Dutch`,\n    },  \n    fr: {\n      flag: `/svg/flags/fr.svg`,\n      native: `Français`,\n      international: `French`,\n    }, \n    es: {\n      flag: `/svg/flags/es.svg`,\n      native: `Espagnol`,\n      international: `Spanish`,\n    }, \n    de: {\n      flag: `/svg/flags/de.svg`,\n      native: `Deutsch`,\n      international: `German`,\n    },\n  },\n  source: {\n    \"name\": \"sensiseeds\",\n    \"title\": \"Sensi Seeds\",\n    \"image\": \"/svg/sensiseeds.svg\",\n    \"url\": \"/xml/sensiseeds/\"\n  }\n}\nconst adminReducer = createReducer(adminSlice, {\n\n  [auto]: (state, action) => {\n    state.auto = action.auto\n    return state\n  },\n\n  [saving]: (state, action) => {\n    state.saving = action.saving\n    return state\n  },\n\n  [queue]: (state, action) => {\n    state.queue = action.queue\n    return state\n  },\n  \n  [managerOpen]: (state, action) => {\n    state.managerOpen = action.managerOpen\n    return state\n  },\n  \n  [bussed]: (state, action) => {\n    state.bussed = action.bussed\n    return state\n  },\n  \n  [bussing]: (state, action) => {\n    state.bussing = action.bussing\n    return state\n  },\n\n  [bus]: (state, action) => {\n    state.bus = action.bus\n    return state\n  },\n\n  [importOpen]: (state, action) => {\n    state.importOpen = action.importOpen\n    return state\n  },\n\n  [error]: (state, action) => {\n    state.error = action.error\n    return state\n  },\n\n})\n\nexport { adminReducer }","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { appReducer, appSlice } from './app/reducer'\nimport { adminReducer, adminSlice } from './admin/reducer'\n\nconst reduxStore = () => {\n  const reducer = combineReducers({\n    app: appReducer,\n    admin: adminReducer,\n  })\n\n  const preloadedState = {\n    app: appSlice,\n    admin: adminSlice,\n  }\n  \n  const middleware = [\n    ...getDefaultMiddleware({\n      serializableCheck: false\n    })\n  ]\n  const store = configureStore({\n    devTools: process.env.NODE_ENV !== 'production',\n    reducer,\n    middleware,\n    preloadedState,\n    enhancers: []\n  })\n  return store\n}\n\nexport default reduxStore","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"[::1]\" ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log( \"Listingslab Service Worker\");\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log(\"Listingslab Service Worker Registered\")\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during Service Worker registration:\", error)\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      alert('No connection. Listingslab is running in offline mode')\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    });\n  }\n}\n","import pJSON from '../package.json'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createBrowserHistory } from 'history'\nimport { Provider } from 'react-redux'\nimport reduxStore from './redux'\nimport * as serviceWorker from './serviceWorker'\n\nconsole.log(`${process.env.REACT_APP_APP} ${pJSON.version} (${process.env.REACT_APP_ENV})`)\n\nconst getHistory = () => { return createBrowserHistory() }\nexport { getHistory }\n\nconst store = reduxStore()\nexport const getStore = () => { return store }\n\nReactDOM.render(\n\t<Provider store={store}><App /></Provider>, \n\tdocument.getElementById('cannastore-app')\n)\n\nserviceWorker.register()"],"sourceRoot":""}